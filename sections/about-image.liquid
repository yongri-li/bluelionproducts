{% if section.settings.image != blank %}
<div class="
  {% if section.settings.container %} container {% else %} container-fluid {% endif %}
  {{ section.settings.margin_top | prepend: 'mt-' }}
  {{ section.settings.margin_bottom | prepend: 'mb-' }}
">
  <div class="row align-items-center {{ section.settings.image_alignment }}">
    <div class="col{{ section.settings.breakpoint }} mb-3">
      <a href="#" class="d-inline-block text-decoration-none text-center">
        <div class="
          position-relative
          overflow-hidden
          {% if section.settings.image_border %}img-thumbnail{% endif %}
          {% if section.settings.image_circle %}rounded-circle{% endif %}
          {{ section.settings.image_hover_effect }}
        ">
          {% if section.settings.image != blank %}
          <img
          class="img-fluid w-100 h-auto"
          src="{{ section.settings.image | img_url: '1920x640', crop: 'center' }}"
          srcset="
            {{ section.settings.image | img_url: '600x600', crop: 'center' }} 600w,
            {{ section.settings.image | img_url: '1200x400', crop: 'center' }} 1200w,
            {{ section.settings.image | img_url: '2400x800', crop: 'center' }} 2400w
          "
          alt="{{ section.settings.image.alt }}"
          width="1920"
          height="640"
        >
          {% else %}
          {{ 'image' | placeholder_svg_tag: 'placeholder-svg bg-light' }}
          {% endif %}
        </div>
      </a>
    </div>
  </div>
</div>
{% endif %}

<style>
.about-image img {
  min-height: {{ section.settings.img_min_height | append: 'px'}};
  object-fit: cover;
}
</style>

{% if section.settings.enable_parallax == "true" %}
<script src="https://cdn.jsdelivr.net/npm/simple-parallax-js@5.6.2/dist/simpleParallax.min.js" integrity="sha256-GBIPMHSjsTxzIyJuhuk7wWz8z2oKeev8qW/c3IgOeVQ=" crossorigin="anonymous" defer="defer"></script>
  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
      const item = document.querySelector('.about-image img')
      new simpleParallax(item, {
        delay: 0,
        orientation: '{{ section.settings.orientation }}',
        scale: parseInt('{{ section.settings.scale }}') / 100,
        transition: 'cubic-bezier(.42,.65,.27,.99)',
      })
    })
  </script>
{% endif %}

{% schema %}
  {
    "name": "Main Image",
    "class": "about-image",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
      {
        "type": "checkbox",
        "id": "container",
        "label": "Wrap in container",
        "default": true
      },
      {
        "type": "text",
        "id": "img_min_height",
        "label": "Image Min Height (px)",
        "default": "280",
        "info": "Useful in mobile view"
      },
      {
        "type": "select",
        "id": "enable_parallax",
        "label": "Enable Parallax",
        "options": [
          { "value": "true", "label": "Enable" },
          { "value": "false", "label": "Disable" }
        ],
        "default": "true"
      },
      {
        "type": "select",
        "id":  "orientation",
        "label": "Parallax Orientation",
        "options": [
          {
            "value": "down", "label": "Down (default)"
          },
          {
            "value": "right", "label": "Right"
          },
          {
            "value": "up", "label": "Up"
          },
          {
            "value": "left", "label": "Left"
          },
          {
            "value": "down right",  "label": "Down-Right"
          },
          {
            "value": "down left",  "label": "Down-Left"
          },
          {
            "value": "up right",  "label": "Up-Right"
          },
          {
            "value": "up left", "label": "Up-Left"
          }
        ],
        "default": "down"
      },
      {
        "type": "range",
        "id": "scale",
        "min": 100,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Scale Image",
        "default": 150
      },
      {
        "type": "checkbox",
        "id": "image_border",
        "label": "Border",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "image_circle",
        "label": "Circle",
        "default": false
      },
      {
        "type": "select",
        "id": "image_alignment",
        "label": "Image Alignment",
        "info": "Note: On mobile view the image will always be on top and content on bottom",
        "default": "flex-row",
        "options": [
          {
            "value": "flex-row", "label": "Left"
          },
          {
            "value": "flex-row-reverse", "label": "Right"
          }
        ]
      },
      {
        "type": "header",
        "content": "Spacing"
      },
      {
        "type": "paragraph",
        "content": "Based on Bootstrap spacing utility classes [Learn more](https://getbootstrap.com/docs/4.5/utilities/spacing/)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "label": "Margin top",
        "min": 0,
        "max": 12,
        "step": 1,
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "label": "Margin bottom",
        "min": 0,
        "max": 12,
        "step": 1,
        "default": 6
      }
    ]
  }
{% endschema %}

{% stylesheet 'scss' %}
.about-image .placeholder-svg {
  width: 100%;
  height: 50vh;
}
{% endstylesheet %}
